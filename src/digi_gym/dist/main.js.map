{"version":3,"sources":["./src/app/statistics/statistics.component.ts","./src/app/statistics/statistics.component.html","./src/environments/environment.ts","./src/app/services/frames.service.ts","./src/app/social/social.component.ts","./src/app/social/social.component.html","./src/app/services/data.service.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/services/station.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/station/single-station/single-station.component.html","./src/app/station/single-station/single-station.component.ts","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/station/station.component.html","./src/app/station/station.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./src/app/support/support.component.html","./src/app/support/support.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,iCAAiC;AAO1B,MAAM,mBAAmB;IAqB9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAnB5C,UAAK,GAAU,EAAE,CAAC;QAClB,SAAI,GAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAEpC,UAAU;QACV,cAAS,GAAY,IAAI,CAAC;QAC1B,cAAS,GAAY,IAAI,CAAC;QAC1B,aAAQ,GAAY,IAAI,CAAC;QACzB,eAAU,GAAY,IAAI,CAAC;QAC3B,mBAAc,GAAY,IAAI,CAAC;QAC/B,eAAU,GAAW,OAAO,CAAC;QAC7B,mBAAc,GAAY,IAAI,CAAC;QAC/B,eAAU,GAAW,SAAS,CAAC;QAC/B,gBAAW,GAAW,MAAM,CAAC;QAE7B,gBAAW,GAAG;YACZ,MAAM,EAAG,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,CAAC;SACzC,CAAC;QAIA,iCAAiC;QACjC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,GAAE,IAAI,CAAC,KAAK,GAAG,GAAG,GAAC,CAAC,CAAC;IACxE,CAAC;IAED,QAAQ;IACR,CAAC;IAIF,QAAQ,CAAC,IAAS;QACf,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,YAAY,CAAC,IAAS;QACpB,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;;sFAzCU,mBAAmB;mGAAnB,mBAAmB;QCThC,yEAAkC;QAChC,yEAAmC;QACjC,4EAAmB;QAAA,mEAAQ;QAAA,4DAAS;QACpC,4EAAmB;QAAA,gEAAK;QAAA,4DAAS;QACjC,4EAAmB;QAAA,2EAAgB;QAAA,4DAAS;QAC9C,4DAAM;QACN,gGAeoC;QAFpC,uKAAU,oBAAgB,IAAC,mHACf,sBAAkB,IADH,uHAEb,wBAAoB,IAFP;QAG7B,4DAA6B;QAC7B,4DAAM;;QAhBJ,0DAAa;QAAb,0EAAa;;;;;;;;;;;;;;ACRf;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,aAAa;IAKxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,WAAM,GAAY,EAAE,CAAC;QAGnB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,GAAE,IAAI,CAAC,MAAM,GAAG,GAAG,GAAC,CAAC,CAAC;IAErE,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;;0EAZU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;ACEb,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEAA8B;QAC5B,4EAAmB;QAAA,8EAAmB;QAAA,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QAAA,4DAAS;QAC9E,4EAAmB;QAAA,sEAAW;QAAA,4DAAS;QACzC,4DAAM;;;;;;;;;;;;;;;;;;;;ACGC,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,iBAAiB,CAAC,CAAC;IAC/C,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,mBAAmB,CAAC,CAAC;IACjD,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qBAAqB,CAAC,CAAC;IAAE,CAAC;;sEAb3C,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;ICQhD,uEAAyD;IAAA,mFAAwB;IAAA,4DAAO;;;IACxF,uEAAsD;IAAA,yEAAc;IAAA,4DAAO;;;IAF/E,4EAA0F;IACtF,yHAAwF;IACxF,yHAA2E;IAC/E,4DAAY;;;IAFD,0DAAgD;IAAhD,2KAAgD;IAChD,0DAA6C;IAA7C,wKAA6C;;;IAQpD,uEAA4D;IAAA,mFAAwB;IAAA,4DAAO;;;IAD/F,4EAAgG;IAC5F,0HAA2F;IAC/F,4DAAY;;;IADD,0DAAmD;IAAnD,iLAAmD;;;IAY1D,uEAA4D;IAAA,mFAAwB;IAAA,4DAAO;;;IAD/F,4EAAgG;IAC5F,0HAA2F;IAC/F,4DAAY;;;IADD,0DAAmD;IAAnD,iLAAmD;;ADtBvE,MAAM,eAAe;IAK1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,SAAI,GAAG,IAAI,CAAC;QAGV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;;8EAlBU,eAAe;+FAAf,eAAe;QCR5B,yEAA8B;QAC1B,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACf,yEAA4B;QACxB,0EAAmD;QAApB,uIAAU,YAAQ,IAAC;QAC9C,oFAAwD;QACpD,4EAAW;QAAC,mEACZ;QAAA,4DAAY;QACZ,sEAAiD;QACjD,uHAGY;QAChB,4DAAiB;QACjB,qFAAwD;QACpD,6EAAW;QAAC,sEACZ;QAAA,4DAAY;QACZ,uEAAoD;QACpD,yHAEY;QAChB,4DAAiB;QACjB,qFAAwD;QACpD,6EAAW;QAAC,sEACZ;QAAA,4DAAY;QACZ,uEAA+E;QAC/E,6EAC+B;QADG,gKAAsB;QAEpD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACnE,4DAAS;QACT,yHAEY;QAChB,4DAAiB;QACjB,0EAA4B;QACxB,8EAAyD;QAAA,iEAAK;QAAA,4DAAS;QACvE,8EAAwD;QAAA,kEAAM;QAAA,4DAAS;QAC3E,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;QApCQ,0DAAwB;QAAxB,qFAAwB;QAKV,0DAA4E;QAA5E,gJAA4E;QAS5E,0DAAkF;QAAlF,sJAAkF;QAOnD,0DAAmC;QAAnC,gGAAmC;QACrB,0DAAmC;QAAnC,wFAAmC;QAE9E,0DAA0C;QAA1C,2GAA0C;QAE5C,0DAAkF;QAAlF,sJAAkF;;;;;;;;;;;;;;;;;;;;ACtBvG,MAAM,cAAc;IAKzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAC1C,IAAI,cAAc,GAAc,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC7C,GAAG,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;gBAC3B,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;IACjC,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;;4EAlBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,oEAAG;QACD,iFAA6B;QAC3B,kFAAiB;QACf,0EAAoB;QAAA,mEAAQ;QAAA,4DAAO;QACnC,4EAAuC;QAAA,kEAAO;QAAA,4DAAS;QACvD,4EAAmE;QAAA,mEAAQ;QAAA,4DAAS;QACpF,4EAA2C;QAAA,sEAAU;QAAA,4DAAS;QAC9D,sEAAoC;QACpC,6EAAyE;QACvE,4EAAU;QAAA,yEAAa;QAAA,4DAAW;QACpC,4DAAS;QACT,6EAAuE;QACrE,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC5B,4DAAS;QACX,4DAAkB;QACpB,4DAAc;QAChB,4DAAI;QACJ,4EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICHL,uEAAqD;IAAA,6DAAE;IAAA,4DAAO;;;IADhF,uEAAyE;IACvE,uDAAgB;IAAA,wIAA8D;IAChF,4DAAO;;;;;IADL,0DAAgB;IAAhB,0FAAgB;IAAO,0DAA4C;IAA5C,iHAA4C;;;IAb3E,8EAA+C;IAC7C,kFAAiB;IACf,oEAAsD;IACtD,iFAAgB;IAAA,uDAAuB;IAAA,4DAAiB;IACxD,oFAAmB;IAAA,uDAAiB;IAAA,4DAAoB;IAC1D,4DAAkB;IAClB,oEAA4D;IAC5D,mFAAkB;IAChB,4EAAmB;IAAA,kEAAM;IAAA,4DAAS;IAClC,iEAAI;IACJ,qEAAG;IACD,+EACA;IAAA,iIAEO;IACT,4DAAI;IACN,4DAAmB;IACnB,oFAAkB;IAChB,6EAAgC;IAAA,sEAAU;IAAA,4DAAS;IAEnD,6EAAmB;IAAA,sEAAU;IAAA,4DAAS;IACxC,4DAAmB;IACrB,4DAAW;;;IAnBS,0DAAuB;IAAvB,mGAAuB;IACpB,0DAAiB;IAAjB,oFAAiB;IAElB,0DAAqB;IAArB,kJAAqB;IAMN,0DAA2B;IAA3B,iGAA2B;;ACF3D,MAAM,sBAAsB;IAcjC,YAAoB,iBAAoC,EAAU,aAA4B;QAA1E,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAT9F,kBAAa,GAAW,EAAE,CAAC;IAW3B,CAAC;IACD,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;IAER,CAAC;IAID,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACxC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IAC7D,CAAC;;4FAtCU,sBAAsB;sGAAtB,sBAAsB;;;;;;QDXnC,yEAA+B;QAC7B,6HAsBW;QACb,4DAAM;QACN,0EAA6F;;QAxB3D,0DAAa;QAAb,6EAAa;QAwBuB,0DAAa;QAAb,wEAAa;;;;;;;;;;;;;;AExBnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACL;AAGrD,6BAA6B;AACgC;AACJ;AACF;AACc;AACJ;AACD;AACT;AACE;AACA;AACW;AACf;AACM;AACA;AACN;AACS;AACT;AACM;AACN;AACU;AACO;AACf;AACF;AACuB;AACR;AACX;AACE;AACG;AACP;AACF;AACU;AACR;AAEC;AACT;AACgC;AACjB;AACG;AACF;AAC4B;AACnB;AACZ;AACG;AACP;;AAuDjD,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,4DAAY;8FADb,EAAE,YAvCJ;YACP,uEAAa;YACb,6FAAuB;YACvB,qEAAgB;YAChB,kEAAmB;YACnB,4EAAiB;YACjB,4EAAiB;YACjB,wEAAe;YACf,sEAAc;YACd,oFAAqB;YACrB,gFAAmB;YACnB,+EAAkB;YAClB,sEAAc;YACd,wEAAe;YACf,yEAAe;YACf,oFAAoB;YACpB,qEAAa;YACb,2EAAgB;YAChB,2EAAgB;YAChB,qEAAa;YACb,8EAAiB;YACjB,qEAAa;YACb,2EAAgB;YAChB,qEAAa;YACb,+EAAkB;YAClB,sFAAqB;YACrB,uEAAc;YACd,qEAAa;YACb,4FAAwB;YACxB,oFAAoB;YACpB,yEAAe;YACf,2EAAgB;YAChB,8EAAiB;YACjB,uEAAc;YACd,qEAAa;YACb,+EAAkB;YAClB,qEAAe;YACf,sEAAgB;SACjB;oIAIU,SAAS,mBAnDlB,4DAAY;QACZ,2EAAc;QACd,8EAAe;QACf,4EAAgB;QAChB,wGAAsB;QACtB,qFAAmB;QACnB,yEAAe;QACf,4EAAgB,aAGhB,uEAAa;QACb,6FAAuB;QACvB,qEAAgB;QAChB,kEAAmB;QACnB,4EAAiB;QACjB,4EAAiB;QACjB,wEAAe;QACf,sEAAc;QACd,oFAAqB;QACrB,gFAAmB;QACnB,+EAAkB;QAClB,sEAAc;QACd,wEAAe;QACf,yEAAe;QACf,oFAAoB;QACpB,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,8EAAiB;QACjB,qEAAa;QACb,2EAAgB;QAChB,qEAAa;QACb,+EAAkB;QAClB,sFAAqB;QACrB,uEAAc;QACd,qEAAa;QACb,4FAAwB;QACxB,oFAAoB;QACpB,yEAAe;QACf,2EAAgB;QAChB,8EAAiB;QACjB,uEAAc;QACd,qEAAa;QACb,+EAAkB;QAClB,qEAAe;QACf,sEAAgB;;;;;;;;;;;;;ACjGpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;;;;ICOxD,uEAA2D;IAAA,mFAAwB;IAAA,4DAAO;;;IAD5F,4EAA8F;IAC5F,wHAA0F;IAC5F,4DAAY;;;IADH,0DAAkD;IAAlD,+KAAkD;;;IAYzD,uEAA2D;IAAA,mFAAwB;IAAA,4DAAO;;;IAD5F,4EAA8F;IAC5F,yHAA0F;IAC5F,4DAAY;;;IADH,0DAAkD;IAAlD,+KAAkD;;ADZ9D,MAAM,cAAc;IAKzB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,SAAI,GAAG,IAAI,CAAC;QAGV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC3D,CAAC;;4EAjBU,cAAc;8FAAd,cAAc;QCR3B,yEAA6B;QACzB,yEAA4B;QAC1B,0EAAkD;QAApB,sIAAU,YAAQ,IAAC;QAC/C,oFAAwD;QACtD,4EAAW;QAAC,qEACZ;QAAA,4DAAY;QACZ,sEAAoD;QACpD,sHAEY;QACd,4DAAiB;QACjB,oFAAwD;QACtD,4EAAW;QAAC,sEACZ;QAAA,4DAAY;QACZ,uEAA+E;QAC/E,6EAC+B;QADG,+JAAsB;QAEpD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACnE,4DAAS;QACT,wHAEY;QACd,4DAAiB;QACjB,0EAA2B;QACvB,6EAA0D;QAAA,kEAAM;QAAA,4DAAS;QACzE,8EAAwD;QAAA,iEAAK;QAAA,4DAAS;QAC1E,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QA3BI,0DAAuB;QAAvB,oFAAuB;QAKb,0DAAgF;QAAhF,oJAAgF;QAOjD,0DAAmC;QAAnC,gGAAmC;QACrB,0DAAmC;QAAnC,wFAAmC;QAE9E,0DAA0C;QAA1C,2GAA0C;QAE5C,0DAAgF;QAAhF,oJAAgF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChBlG,sEAAuC;IACrC,4EAAoD;IAAjC,oWAAgC;IAAC,uDAAyC;IAAA,4DAAS;IACtG,gEAAI;IACN,4DAAM;;;IAFgD,0DAAyC;IAAzC,uHAAyC;;ACS5F,MAAM,gBAAgB;IAK3B,YAAoB,cAA8B,EAAU,aAA4B;QAApE,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAHxF,aAAQ,GAAc,EAAE,CAAC;IAIzB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAClD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,GAAC,IAAI,CAAC,CAAC;QACrG,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;;gFApBU,gBAAgB;gGAAhB,gBAAgB;QDb7B,uFAAsB;QAEpB,gFAAgE;QAC9D,4GAGM;QAER,4DAAa;QAEb,sFAAyH;QAE3H,4DAAuB;;QAVe,0DAAe;QAAf,wEAAe;QACxB,0DAAW;QAAX,iFAAW;QAOlB,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;AETjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEO;AACG;AACL;AAEG;AACS;AACT;;;AAE/D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0EAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,6EAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2EAAgB,EAAE;IACjD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;CACjD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACtBuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ICTlC,8EAAgE;IAC9D,kFAAiB;IACf,iFAAgB;IAAA,uDAAqB;IAAA,4DAAiB;IACtD,oFAAmB;IAAA,uDAAgB;IAAA,4DAAoB;IACzD,4DAAkB;IAClB,mFAAkB;IAChB,oEAAG;IACD,uDACF;IAAA,4DAAI;IACN,4DAAmB;IACnB,mFAAkB;IAChB,6EAAmC;IAAA,iEAAK;IAAA,4DAAS;IACjD,6EAAgC;IAAA,yEAAa;IAAA,4DAAS;IACxD,4DAAmB;IACrB,4DAAW;;;IAZS,0DAAqB;IAArB,qFAAqB;IAClB,0DAAgB;IAAhB,gFAAgB;IAIjC,0DACF;IADE,kGACF;;ACHC,MAAM,gBAAgB;IAI3B;QAFA,aAAQ,GAAI,CAAC,EAAC,WAAW,EAAE,8BAA8B,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,OAAO,EAAC,EAAE,IAAI,EAAE,cAAc,EAAC,EAAE,EAAC,WAAW,EAAE,mDAAmD,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,IAAI,EAAE,cAAc,EAAC,CAAC;IAE1M,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFAPU,gBAAgB;gGAAhB,gBAAgB;QDN7B,yEAA+B;QAC7B,uHAcW;QACb,4DAAM;;QAf+C,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;AEFhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Data } from '@angular/router';\nimport { DataService } from '../services/data.service';\n//import { multi } from './data';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n  multi: any[] = [];\n  view: [number, number] = [700, 400];\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = true;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Usage';\n  showYAxisLabel: boolean = true;\n  yAxisLabel: string = 'Station';\n  legendTitle: string = 'Days';\n\n  colorScheme = {\n    domain:  [\"#7400b8\",\"#4ea8de\",\"#80ffdb\"]\n  };\n\n\n  constructor(private dataService: DataService) {\n    //Object.assign(this, { multi });\n    this.dataService.getStatistics().subscribe(res => {this.multi = res});\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n onSelect(data: any): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data: any): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data: any): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n}\n","\n<div class=\"statistics-container\">\n  <div class=\"statistics-button-row\">\n    <button mat-button>Stations</button>\n    <button mat-button>Users</button>\n    <button mat-button>Detected Objects</button>\n  </div>\n  <ngx-charts-bar-vertical-2d\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [results]=\"multi\"\n  [gradient]=\"gradient\"\n  [xAxis]=\"showXAxis\"\n  [yAxis]=\"showYAxis\"\n  [legend]=\"showLegend\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [legendTitle]=\"legendTitle\"\n  (select)=\"onSelect($event)\"\n  (activate)=\"onActivate($event)\"\n  (deactivate)=\"onDeactivate($event)\">\n</ngx-charts-bar-vertical-2d>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Frame } from '../models/Frame';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FramesService {\n\n\n  frames: Frame[] = [];\n\n  constructor(private dataService: DataService) {\n    this.dataService.getFrames().subscribe(res => {this.frames = res});\n    \n  }\n\n  getFrames(): Frame[] {\n    return this.frames;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-social',\n  templateUrl: './social.component.html',\n  styleUrls: ['./social.component.scss']\n})\nexport class SocialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"social-container\">\n  <button mat-button>Announcement (all) <mat-icon>quickreply</mat-icon></button>\n  <button mat-button>Suggestions</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getFrames() {\n    return this.http.get<any>(\"/api/frames/all\");\n  }\n\n  getStations() {\n    return this.http.get<any>(\"/api/stations/all\");\n  }\n\n  getStatistics() {\n    return this.http.get<any>(\"/api/statistics/all\");  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: FormGroup;\n  hide = true;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.signupForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    console.log(this.signupForm.valid + this.signupForm.value);\n  }\n\n}\n","<div class=\"signup-container\">\n    <h3>Signup</h3>\n    <div class=\"form-container\">\n        <form [formGroup]=\"signupForm\" (submit)=\"submit()\">\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n                <mat-label> E-mail\n                </mat-label>\n                <input matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"signupForm.controls.email.touched && signupForm.controls.email.invalid\">\n                    <span *ngIf=\"signupForm.controls.email.errors?.required\">This field is mandatory.</span>\n                    <span *ngIf=\"signupForm.controls.email.errors?.email\">Invalid email.</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n                <mat-label> Username\n                </mat-label>\n                <input matInput formControlName=\"username\" required>\n                <mat-error *ngIf=\"signupForm.controls.username.touched && signupForm.controls.username.invalid\">\n                    <span *ngIf=\"signupForm.controls.username.errors?.required\">This field is mandatory.</span>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"form-field\" appearance=\"outline\">\n                <mat-label> Password\n                </mat-label>\n                <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                </button>\n                <mat-error *ngIf=\"signupForm.controls.password.touched && signupForm.controls.password.invalid\">\n                    <span *ngIf=\"signupForm.controls.password.errors?.required\">This field is mandatory.</span>\n                </mat-error>\n            </mat-form-field>\n            <div class=\"signup-actions\">\n                <button mat-button color=\"secondary\" routerLink=\"/login\">Login</button>\n                <button mat-raised-button color=\"primary\" type=\"submit\">Signup</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Station } from '../models/Station';\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StationService {\n\n  stations: Station[]\n\n\n  constructor(private dataService: DataService) {\n    let stationBuilded: Station[] = [];\n    this.dataService.getStations().subscribe(res => {\n      res.forEach((station: any) => {\n        stationBuilded.push(station);\n        console.log(station);\n      });\n    });\n    this.stations = stationBuilded;\n  }\n\n  getStations(): Station[] {\n    return this.stations;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Digi-Gym';\n}\n","<p>\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <span routerLink=\"\">Digi-Gym</span>\n      <button mat-button routerLink=\"social\">Socials</button>\n      <button mat-button routerLink=\"stations\" routerLinkActive=\"accent\">Stations</button>\n      <button mat-button routerLink=\"statistics\">Statistics</button>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button routerLink=\"/support\" routerLinkActive=\"primary\">\n        <mat-icon>support_agent</mat-icon>\n      </button>\n      <button mat-icon-button routerLink=\"/login\" routerLinkActive=\"primary\">\n        <mat-icon>login</mat-icon>\n      </button>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</p>\n<router-outlet></router-outlet>\n","<div class=\"station-container\">\n  <mat-card class=\"station-card\" *ngIf=\"station\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"station-card-image\"></div>\n      <mat-card-title>Station {{station!.id}}</mat-card-title>\n      <mat-card-subtitle>{{station!.name}}</mat-card-subtitle>\n    </mat-card-header> \n    <img mat-card-image [src]=\"canvasDataUrl\" alt=\"station-pic\">\n    <mat-card-content>\n      <button mat-button>Camera</button>\n      <br>\n      <p>\n        Erkannte Objekte:\n        <span *ngFor=\"let objDetection of station!.objDetections; let i = index\">\n          {{objDetection}}<span *ngIf=\"i != station!.objDetections.length - 1\">, </span>\n        </span>\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"warn\">Deactivate</button>\n  \n      <button mat-button>Statistics</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n<canvas mat-card-image width=\"1920\" height=\"1080\" #canvas id=\"canvas\" [hidden]=true></canvas>\n","import { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport * as p5 from 'p5';\nimport { FramesService } from 'src/app/services/frames.service';\n\n\n@Component({\n  selector: 'app-single-station',\n  templateUrl: './single-station.component.html',\n  styleUrls: ['./single-station.component.scss']\n})\nexport class SingleStationComponent implements OnInit, AfterViewInit, OnChanges {\n\n  @ViewChild('canvas', { static: false })\n  canvas!: ElementRef<HTMLCanvasElement>;\n  private ctx: any;\n  canvasDataUrl: string = \"\";\n\n  @Input()\n  station!: any;\n\n  @Input()\n  box!: any;\n  \n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private framesService: FramesService) {\n\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.drawRectangle();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n\n  ngAfterViewInit(): void {\n    this.changeDetectorRef.detectChanges();\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.drawRectangle();\n  }\n\n  drawRectangle(): void {\n    this.ctx.fillStyle = 'rgb(63, 81, 181)';\n    this.ctx.clearRect(0, 0, 1920, 1080);\n    this.ctx.fillRect(this.box[0][0], this.box[0][1], this.box[1][0] - this.box[0][0], this.box[1][1]  - this.box[0][1]);\n    this.canvasDataUrl = this.canvas.nativeElement.toDataURL();\n  }\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n//Angular Material Components\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { StationComponent } from './station/station.component';\nimport { SingleStationComponent } from './station/single-station/single-station.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { SocialComponent } from './social/social.component';\nimport { SupportComponent } from './support/support.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    StationComponent,\n    SingleStationComponent,\n    StatisticsComponent,\n    SocialComponent,\n    SupportComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    NgxChartsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  hide = true;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    console.log(this.loginForm.valid + this.loginForm.value);\n  }\n\n}\n","<div class=\"login-container\">\n    <div class=\"form-container\">\n      <form [formGroup]=\"loginForm\" (submit)=\"submit()\">\n        <mat-form-field class=\"form-field\" appearance=\"outline\">\n          <mat-label> Username\n          </mat-label>\n          <input matInput formControlName=\"username\" required>\n          <mat-error *ngIf=\"loginForm.controls.username.touched && loginForm.controls.username.invalid\">\n            <span *ngIf=\"loginForm.controls.username.errors?.required\">This field is mandatory.</span>\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"form-field\" appearance=\"outline\">\n          <mat-label> Password\n          </mat-label>\n          <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\n          <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n              [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n          <mat-error *ngIf=\"loginForm.controls.password.touched && loginForm.controls.password.invalid\">\n            <span *ngIf=\"loginForm.controls.password.errors?.required\">This field is mandatory.</span>\n          </mat-error>\n        </mat-form-field>\n        <div class=\"login-actions\">\n            <button mat-button color=\"secondary\" routerLink=\"/signup\">Signup</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n        </div>\n      </form>\n    </div>\n  </div>","<mat-drawer-container>\n\n  <mat-drawer class=\"station-sidenav\" [opened]=\"true\" mode=\"side\">\n    <div *ngFor=\"let station of stations\" >\n      <button mat-button (click)=\"selectStation(station)\">Station {{station.id}} - {{station.name}}</button>\n      <br>\n    </div>\n\n  </mat-drawer>\n\n  <app-single-station [station]=\"selectedStation\" [box]=\"frameBox\" id=\"singleStation\" #singleStation ></app-single-station>\n\n</mat-drawer-container>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { any } from 'sequelize/types/lib/operators';\nimport { Frame } from '../models/Frame';\nimport { Station } from '../models/Station';\nimport { FramesService } from '../services/frames.service';\nimport { StationService } from '../services/station.service';\nimport { SingleStationComponent } from './single-station/single-station.component';\n\n@Component({\n  selector: 'app-station',\n  templateUrl: './station.component.html',\n  styleUrls: ['./station.component.scss']\n})\nexport class StationComponent implements OnInit {\n\n  stations: Station[] = [];\n  selectedStation!: Station\n  frameBox!: number[][]\n  constructor(private stationService: StationService, private framesService: FramesService) {\n  }\n\n  ngOnInit(): void {\n    this.stations = this.stationService.getStations();\n    this.selectedStation = this.stations[0];\n    console.log(this.selectedStation);\n  }\n\n  selectStation(station: Station) {\n    this.selectedStation = station;\n    this.frameBox = [[Math.random() * 100, Math.random()* 100], [Math.random()*1000, Math.random()*1000]]\n    let frames = this.framesService.getFrames();\n    this.frameBox  =  frames.filter(x => x.camera_station_mapping.station.id == station.id).map(x => x.frame_box)[0];\n    console.log(this.frameBox);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { SocialComponent } from './social/social.component';\nimport { SingleStationComponent } from './station/single-station/single-station.component';\nimport { StationComponent } from './station/station.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { SupportComponent } from './support/support.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'stations', component: StationComponent },\n  { path: 'statistics', component: StatisticsComponent },\n  { path: 'social', component: SocialComponent },\n  { path: 'support', component: SupportComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","\n<div class=\"support-container\">\n  <mat-card class=\"support-card\" *ngFor=\"let request of requests\">\n    <mat-card-header>\n      <mat-card-title>{{request.user.name}}</mat-card-title>\n      <mat-card-subtitle>{{request.date}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <p>\n        {{request.description}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"primary\">Reply</button>\n      <button mat-button color=\"warn\">Done | Delete</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.scss']\n})\nexport class SupportComponent implements OnInit {\n\n  requests =  [{description: \"Hey, Station 2 stinkt brutal\", user: {name: \"Basti\"}, date: \"Today, 12:14\"}, {description: \"Moin, kann mir jemand zeigen wie die Übung geht??\", user: {name: \"Thomas\"}, date: \"Today, 12:14\"}]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}