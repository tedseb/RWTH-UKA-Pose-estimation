{"version":3,"sources":["./src/environments/environment.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hide = true;\n\n}\n","\n<div class=\"main-div\">\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>Signup</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n    \n            <div class=\"example-container\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Username</mat-label>\n                    <input matInput>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Email</mat-label>\n                    <input matInput>\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Enter your password</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\">\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button color=\"secondary\" routerLink=\"/login\">Login</button>\n            <button mat-button color=\"primary\" routerLink=\"/signup\">Sign Up</button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webapp';\n}\n","<p>\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <span>Digi-Gym</span>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon\" routerLink=\"/login\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>login</mat-icon>\n      </button>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</p>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n//Angular Material Components\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  hide = true;\n  username = \"\";\n  email =\"\";\n}\n","\n<div class=\"main-div\">\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>Login</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n    \n            <div class=\"example-container\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Username</mat-label>\n                    <input matInput type=\"text\">\n                </mat-form-field>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Enter your password</mat-label>\n                    <input matInput [type]=\"hide ? 'password' : 'text'\">\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                        [attr.aria-pressed]=\"hide\">\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button color=\"secondary\" routerLink=\"/signup\">Sign Up</button>\n            <button mat-button color=\"primary\">Login</button>\n        </mat-card-actions>\n    </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\nconst routes: Routes = [{ path: 'login', component: LoginComponent }, {\n  path: 'signup', component: SignupComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}