{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/spots.service.ts","./src/app/app.module.ts","./src/app/spots/spots.component.html","./src/app/spots/spots.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { \n  }\n\n  getWebsocket(): WebSocketSubject<any> {\n    return webSocket('ws://localhost:3061');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webapp';\n}\n","<mat-toolbar>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Digi Gym</span>\n    <button mat-button color=\"primary\" routerLink=\"/spots\">Spots</button>\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>settings</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>person</mat-icon>\n    </button>\n  </mat-toolbar>\n  <router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Spot } from '../shared/models/spot';\nimport { DataService } from './data.service';\nimport { WebSocketSubject } from 'rxjs/webSocket';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotsService {\n\n  socket: WebSocketSubject<any>;\n  spots: BehaviorSubject<Spot[]>;\n  tableCols: string[] = ['id', 'exercise', 'active', 'updatedAt'];\n\n  constructor(private dataService: DataService) { \n    this.socket = dataService.getWebsocket();\n    this.socket.subscribe(message => {\n      this.spots.next(message);\n    });\n    this.spots = new BehaviorSubject<Spot[]>([]);\n    this.tableCols = this.tableCols;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\n\n// angular material module imports\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { SpotsComponent } from './spots/spots.component';\nimport {MatListModule} from '@angular/material/list';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpotsComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatGridListModule,\n    MatCardModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatBadgeModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSliderModule,\n    MatChipsModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatTableModule,\n    MatDividerModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- <table mat-table [dataSource]=\"spots\">\n    <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let spot\"> {{spot.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Exercise </th>\n        <td mat-cell *matCellDef=\"let spot\"> {{spot.exercise}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"active\">\n        <th mat-header-cell *matHeaderCellDef> Active </th>\n        <td mat-cell *matCellDef=\"let spot\"> {{spot.active}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"updatedAt\">\n        <th mat-header-cell *matHeaderCellDef> Last Update </th>\n        <td mat-cell *matCellDef=\"let spot\"> {{spot.updatedAt}} </td>\n    </ng-container>\n\n\n    <tr mat-header-row *matHeaderRowDef=\"tableCols\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: tableCols;\"></tr>\n</table> -->\n<!-- \n<ul>\n    <li *ngFor=\"let spot of spots\">\n        <span *ngIf=\"spot.active\">\n            <mat-icon>toggle_on</mat-icon>\n        </span>\n        <span *ngIf=\"!spot.active\">\n            <mat-icon>toggle_off</mat-icon>\n        </span>\n        Spot {{spot.id}}:\n        <br>\n        Exercise: {{spot.exercise}}\n        <br>\n        UpdatedAt: {{spot.updatedAt}}\n    </li>\n</ul>\n\n<mat-list role=\"list\">\n    <mat-list-item *ngFor=\"let spot of spots\">\n        <span *ngIf=\"spot.active\">\n            <mat-icon>toggle_on</mat-icon>\n        </span>\n        <span *ngIf=\"!spot.active\">\n            <mat-icon>toggle_off</mat-icon>\n        </span>\n        Spot {{spot.id}}:\n        <br>\n        - Exercise: {{spot.exercise}}\n        <br>\n        - UpdatedAt: {{spot.updatedAt}}\n    </mat-list-item>\n</mat-list> -->\n\n<mat-card *ngFor=\"let spot of spots\" style=\"margin-bottom: 10px;\">\n    <mat-card-header>\n        <mat-card-title>\n            <span *ngIf=\"spot.active\">\n                <mat-icon>✅</mat-icon>\n            </span>\n            <span *ngIf=\"!spot.active\">\n                <mat-icon>❎</mat-icon>\n            </span>\n            Spot Nr. {{spot.id}}\n        </mat-card-title>\n        <mat-card-subtitle>Letztes Update: {{spot.updatedAt}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            Übung: {{spot.exercise}}\n        </p>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { SpotsService } from '../services/spots.service';\nimport { Spot } from '../shared/models/spot';\n\n\n\n@Component({\n  selector: 'app-spots',\n  templateUrl: './spots.component.html',\n  styleUrls: ['./spots.component.scss']\n})\nexport class SpotsComponent implements OnInit {\n\n  spots: Spot[];\n\n  constructor(private spotsService: SpotsService) {\n    this.spots = [];\n  }\n\n  ngOnInit(): void {\n    this.spotsService.spots.subscribe(spots => {this.spots = spots});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SpotsComponent } from './spots/spots.component';\n\nconst routes: Routes = [\n  { path: 'spots', component: SpotsComponent },\n  { path: '', redirectTo: '/spots', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}